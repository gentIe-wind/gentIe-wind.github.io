{"title":"BBC———读写特性","slug":"hello-world - BBC——读写特性","date":"2020-06-21T04:20:32.465Z","updated":"2020-06-21T04:55:35.577Z","comments":true,"path":"api/articles/hello-world - BBC——读写特性.json","photos":[],"link":"","excerpt":"","covers":["http://qarz21mhq.bkt.clouddn.com/93.jpg","http://qarz21mhq.bkt.clouddn.com/20200621124040.png"],"content":"<p><img src=\"http://qarz21mhq.bkt.clouddn.com/93.jpg\" alt=\"\"></p>\n<h2 id=\"1-读取BBC开发板的名称\"><a href=\"#1-读取BBC开发板的名称\" class=\"headerlink\" title=\"1.读取BBC开发板的名称\"></a>1.读取BBC开发板的名称</h2><p>代码如下：</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function readModelNumber() </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    console.log(&quot;readModelNumber&quot;);   </span><br><span class=\"line\">    &#x2F;&#x2F; state validation   </span><br><span class=\"line\">    if (!connected) </span><br><span class=\"line\">    &#123;     </span><br><span class=\"line\">        alert(&quot;Error: Discover and connect to a device before using this function&quot;);     </span><br><span class=\"line\">        return;   </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    if (!services_discovered) </span><br><span class=\"line\">    &#123;     </span><br><span class=\"line\">        alert(&quot;Error: Service discovery has not yet completed&quot;);     </span><br><span class=\"line\">        return;   </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    if (!has_device_information_service) </span><br><span class=\"line\">    &#123;     </span><br><span class=\"line\">        alert(&quot;Error: The connected device does not contain the device information service&quot;);     </span><br><span class=\"line\">        return;   </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    if (!has_model_name_string) </span><br><span class=\"line\">    &#123;     </span><br><span class=\"line\">        alert(&quot;Error: The connected device does not contain the model name string characteristic&quot;);     </span><br><span class=\"line\">        return;   </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    </span><br><span class=\"line\">    model_number_string.readValue()  </span><br><span class=\"line\">    .then(value &#x3D;&gt; &#123;   </span><br><span class=\"line\">        data &#x3D; new Uint8Array(value.buffer);   </span><br><span class=\"line\">        model_number_string &#x3D; new TextDecoder(&quot;utf-8&quot;).decode(data);  </span><br><span class=\"line\">        console.log(model_number_string);   </span><br><span class=\"line\">        document.getElementById(&quot;model_number&quot;).innerHTML &#x3D; model_number_string;  </span><br><span class=\"line\">        &#125;)  </span><br><span class=\"line\">    .catch(error &#x3D;&gt; &#123;  </span><br><span class=\"line\">        console.log(&#39;Error: &#39; + error);   </span><br><span class=\"line\">        alert(&#39;Error: &#39; + error);   </span><br><span class=\"line\">        return;  </span><br><span class=\"line\">        &#125;); </span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n\n<p>并在<head>&lt;\\head&gt;中添加按钮</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h3&gt;Read Characteristic - Model number&lt;&#x2F;h3&gt;  </span><br><span class=\"line\">        &lt;button id&#x3D;&quot;btn_read&quot; onclick&#x3D;&quot;readModelNumber()&quot;&gt;Read Model number&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>代码运行不报错后，用谷歌浏览器打开</p>\n<p>先连接自己的板子</p>\n<p>随后可以看到</p>\n<p><img src=\"http://qarz21mhq.bkt.clouddn.com/20200621124040.png\" alt=\"\"></p>\n<h2 id=\"2-网页控制开发板的亮灭\"><a href=\"#2-网页控制开发板的亮灭\" class=\"headerlink\" title=\"2.网页控制开发板的亮灭\"></a>2.网页控制开发板的亮灭</h2><p>我们添加函数</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function randomLEDs()   &#x2F;&#x2F;第6课上添加</span><br><span class=\"line\">       &#123;  </span><br><span class=\"line\">           console.log(&quot;randomLEDs&quot;);   </span><br><span class=\"line\">           &#x2F;&#x2F; state validation   </span><br><span class=\"line\">           if (!connected) </span><br><span class=\"line\">           &#123;     </span><br><span class=\"line\">               alert(&quot;Error: Discover and connect to a device before using this function&quot;);     </span><br><span class=\"line\">               return;   </span><br><span class=\"line\">           &#125;   </span><br><span class=\"line\">           if (!services_discovered) </span><br><span class=\"line\">           &#123;     </span><br><span class=\"line\">               alert(&quot;Error: Service discovery has not yet completed&quot;);     </span><br><span class=\"line\">               return;  </span><br><span class=\"line\">           &#125;   </span><br><span class=\"line\">           if (!has_led_service) </span><br><span class=\"line\">           &#123;     </span><br><span class=\"line\">               alert(&quot;Error: The connected device does not contain the LED service&quot;);     </span><br><span class=\"line\">               return;  </span><br><span class=\"line\">           &#125;   </span><br><span class=\"line\">           if (!has_led_matrix_state) </span><br><span class=\"line\">           &#123;      </span><br><span class=\"line\">               alert(&quot;Error: The connected device does not contain the LED matrix state characteristic&quot;);      </span><br><span class=\"line\">               return;   </span><br><span class=\"line\">           &#125;   </span><br><span class=\"line\">           var led_array &#x3D; [0, 0, 0, 0, 0];   </span><br><span class=\"line\"></span><br><span class=\"line\">            &#x2F;&#x2F; Math.random():0~1  Math.floor(x):返回小于等于x的最大整数</span><br><span class=\"line\">           led_array[0] &#x3D; Math.floor(Math.random() * 32);  </span><br><span class=\"line\">           led_array[1] &#x3D; 1;   </span><br><span class=\"line\">           led_array[2] &#x3D; 2;   </span><br><span class=\"line\">           led_array[3] &#x3D; 3;   </span><br><span class=\"line\">           led_array[4] &#x3D; 4;</span><br><span class=\"line\">           var led_matrix_data &#x3D; new Uint8Array(led_array); </span><br><span class=\"line\"></span><br><span class=\"line\">           led_matrix_state.writeValue(led_matrix_data.buffer)</span><br><span class=\"line\">           .then(_ &#x3D;&gt; &#123;   </span><br><span class=\"line\">               console.log(&#39;LED matrix state changed&#39;);  </span><br><span class=\"line\">               &#125;)  </span><br><span class=\"line\">           .catch(error &#x3D;&gt; &#123;   </span><br><span class=\"line\">               console.log(&#39;Error: &#39; + error);   </span><br><span class=\"line\">               alert(&#39;Error: &#39; + error);   return;  </span><br><span class=\"line\">               &#125;); </span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure></div>\n\n<p>其中led_array[0]~led_array[4]分别对应了5行小灯 </p>\n","categories":[],"tags":[]}